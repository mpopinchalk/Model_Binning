from astrodbkit import astrodb

ma_db = astrodb.Database('/Users/teacher/Desktop/Research/model_atmospheres.db')

from matplotlib import pyplot as plt
import numpy as np
#from BDNYCdb import utilities as u
from pylab import rcParams

rcParams['figure.figsize'] = 8, 10


def binmodels(model, teffmin, teffmax, logg, wmin, n, jump, f_sed=False):
    """plot all models from any specified model grid
    model: a string of the name of the model grid
    """
    k = 0  # used to shift models up to fit multiple in one plot
    models = ma_db.list("select * from {} where logg={} and teff between {} and {}".format(model, logg, teffmin, teffmax)).fetchall()# This pulls out all of the temps at one specific gravity
    for g in models:#each model
        teff, w, f = g[1], g[4], g[5]#pulling out the variables
        start = wmin - (jump/2)
        f = f / max(f)  # normalizes flux
         #new number of bins
        binf = []
        binw = []
        for i in range(0,n): #start handling the data, numb values at a time
            end = start + jump
            fnew = sum(f[np.where(np.logical_and(w>start,w<end))])
            binf.append(fnew)
            wnew = wmin + (i*jump)
            binw.append(wnew)
            start = end
    #binf = binf/max(binf)
        plt.plot(binw, binf)  # remove k since not shifting to fit multiple on one plot
        plt.plot(w, f)
        plt.annotate(teff, xy=(2.37, k), annotation_clip=False)  # legend in any spot aka text box, could switch to legend
        k = k+1
    plt.xlim(1.9, 2.5) # shows xrange
    yl = plt.ylabel('Normalized Fux + constant')
    xl = plt.xlabel('Wavelength (microns)')
    plt.show()
